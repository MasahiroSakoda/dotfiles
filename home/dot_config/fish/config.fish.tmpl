# -*-mode:fish-*- vim:ft=fish.gotexttmpl

# Language/Locale Configuration
set -x LANG ja_JP.UTF-8
set -x LC_CTYPE ja_JP.UTF-8

# Path Configuration
fish_add_path {{ .brew_prefix }}/bin
fish_add_path {{ .brew_prefix }}/sbin
fish_add_path $HOME/.local/bin
fish_add_path $XDG_DATA_HOME/nvim/mason/bin

{{- if eq .chezmoi.arch "arm64" }}
set -gx ARCHFLAGS '-arch arm64'
{{- else if eq .chezmoi.arch "amd64" }}
set -gx ARCHFLAGS '-arch x86_64'
{{- end }}

for pkg in bison curl openssl@3
  fish_add_path $HOMEBREW_PREFIX/opt/$pkg/bin
end

# Editor
set -gx EDITOR nvim
set -gx VISUAL $EDITOR
set -gx NVIM_APPNAME nvim

# cURL
set -gx HOMEBREW_FORCE_BREWED_CURL 1
set -gx HOMEBREW_CURL_RETRIES 5
set -gx HOMEBREW_CURLRC "$HOME/.config/curlrc"

# w3m
set -gx W3M_DIR "$XDG_CONFIG_HOME/w3m"

# ripgrep config
# set -gx RIPGREP_CONFIG_PATH $HOME/.config/rg/ripgreprc

# Prompt configuration
starship init fish | source
set -gx STARSHIP_CONFIG ~/.config/starship/starship.toml

# Pager
set -gx LESS_TERMCAP_mb \e'[01;31m'
# set -gx PAGER "lv -c"
set -gx PAGER "less"
set -gx MANPAGER "sh -c 'col -bx | bat -l man -p --style=numbers'"
set -gx BAT_THEME "Monokai Extended Origin"
set -gx LV "-Ou8 -c -Sh1;36 -Su1;4;32 -Ss7;37;1;33"

# Grep
set -x GREP_OPTIONS "--color=always"

# Fish Plugin
## Configure fish plugins
set fish_plugins theme peco git osx brew rails bundler gem pbcopy

## peco
function fish_user_key_bindings
  bind \cr peco_select_history # Bind for peco history to Ctrl+r
end

## fzf search
set -Ux FZF_DEFAULT_OPTS "--color=fg:#f8f8f2,bg:#282a36,hl:#bd93f9 --color=fg+:#f8f8f2,bg+:#44475a,hl+:#bd93f9 --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6 --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4"
set -x FZF_LEGACY_KEYBINDINGS 0
set -x FZF_DEFAULT_COMMAND 'rg --files --hidden --glob "!.git"'
set -x FZF_REVERSE_ISEARCH_OPTS "--reverse --height=100% --border"

## Done notification
set -x __done_min_cmd_duration 60000  # default: 5000 ms

## thefuck
type -q thefuck && thefuck --alias | source

# tabtab source for packages
# uninstall by removing these lines
# Note: this is required for `pnpm` completion
[ -f ~/.config/tabtab/fish/__tabtab.fish ]; and . ~/.config/tabtab/fish/__tabtab.fish; or true

# Fish
abbr -a -- cl clear
abbr -a -- x exit

## File
abbr -a -- o open
abbr -a -- oa 'open -a'
abbr -a -- mv 'mv -iv'
abbr -a -- cp 'cp -iv'
abbr -a -- cpr 'cp -R'
abbr -a -- rm 'rm -iv'
abbr -a -- rmf 'rm -if'
abbr -a -- rmrf 'rm -rf'

## Directory
abbr -a -- cwd 'pwd | {{ .cmd.copy }}'
abbr -a -- mkdir 'mkdir -pv'
abbr -a -- .. 'cd ..'
abbr -a -- ... 'cd ../..'
abbr -a -- .... 'cd ../../..'
abbr -a -- .2 'cd ../../'
abbr -a -- .3 'cd ../../../'
abbr -a -- .4 'cd ../../../../'
abbr -a -- .5 'cd ../../../../../'

## Permission
abbr -a -- co 'chown -v'
abbr -a -- cmx 'chmod +x'
abbr -a -- cmr 'chmod -R'
abbr -a -- fishrc 'chezmoi edit /Users/masahiro/.config/fish/config.fish'

# tmux
abbr -a -- tm tmux
abbr -a -- tmd tmux\ a\ -t\ default\ \|\|\ tmux\ new\ -s\ default\\\;\ source\ /Users/masahiro/.config/tmux/default.session.conf
abbr -a -- tmn 'tmux new -s'

# git
abbr -a -- g git
abbr -a -- lg lazygit

abbr -a -- gs 'git status'
abbr -a -- gss 'git status --short'
abbr -a -- gsb 'git status --short --branch'
abbr -a -- gl 'git log --graph --all'
abbr -a -- gd 'git diff'

abbr -a -- ga 'git add --verbose'
abbr -a -- gaa 'git add --verbose --all'
abbr -a -- grm 'git rm --verbose'
abbr -a -- gmv 'git mv --verbose'
abbr -a -- gm 'git merge --verbose'
abbr -a -- gma 'git merge --abort'
abbr -a -- gms 'git merge --squash'

abbr -a -- gcp 'git cherry-pick'
abbr -a -- gcpe 'git cherry-pick -e'
abbr -a -- gcpn 'git cherry-pick -n'
abbr -a -- gcpa 'git cherry-pick --abort'
abbr -a -- gcpc 'git cherry-pick --continue'

abbr -a -- gb 'git branch --all'
abbr -a -- gbd 'git branch -d'
abbr -a -- gco 'git checkout'
abbr -a -- gcob 'git checkout -b'
abbr -a -- gcoo 'git checkout --ours'
abbr -a -- gcot 'git checkout --theirs'

abbr -a -- gcl 'git clone'
abbr -a -- gf 'git fetch origin'

abbr -a -- gpl 'git pull origin'
abbr -a -- gplu 'git pull upstream'
abbr -a -- gplr 'git pull --rebase'

abbr -a -- gpr 'git pull-request'
abbr -a -- gprd 'git pull-request -d'
abbr -a -- gprp 'git pull-request -p'

abbr -a -- gps 'git push origin'
abbr -a -- gpsu 'git push upstream'
abbr -a -- gpsd 'git push --dry-run'

abbr -a -- grb 'git rebase'
abbr -a -- grba 'git rebase --abort'
abbr -a -- grbc 'git rebase --continue'
abbr -a -- grbi 'git rebase --interactive'
abbr -a -- grbs 'git rebase --skip'

abbr -a -- gt 'git tag -a'
abbr -a -- gts 'git tag --sign'

## GitHub cli
abbr -a -- ghs 'gh status'
abbr -a -- ghi 'gh issue'
abbr -a -- ghil 'gh issue list'
abbr -a -- ghis 'gh issue status'
abbr -a -- ghic 'gh issue create'
abbr -a -- ghiC 'gh issue close'
abbr -a -- ghiv 'gh issue view'
abbr -a -- ghw 'gh workflow'
abbr -a -- ghwl 'gh workflow list'
abbr -a -- ghe 'gh extension'
abbr -a -- ghel 'gh extension list'
abbr -a -- ghes 'gh extension search'
abbr -a -- gheb 'gh extension browse'
abbr -a -- ghei 'gh extension install'
abbr -a -- gher 'gh extension remove'

# docker
abbr -a -- d docker
abbr -a -- dps 'docker ps'
abbr -a -- dk 'docker kill'
abbr -a -- dp 'docker pull'
abbr -a -- dP 'docker push'
abbr -a -- dr 'docker run --rm'

## docker compose
abbr -a -- dc 'docker compose'
abbr -a -- dcb 'docker compose build'
abbr -a -- dcu 'docker compose up --build -d'
abbr -a -- dcd 'docker compose down'
abbr -a -- dcl 'docker compose logs'
abbr -a -- dcr 'docker compose run --rm'
abbr -a -- dce 'docker compose exec'
abbr -a -- dcs 'docker compose stop'

# chezmoi
abbr -a -- .d 'chezmoi diff | bat'
abbr -a -- .D 'chezmoi doctor'
abbr -a -- .u 'chezmoi update'
abbr -a -- .a 'chezmoi apply'
abbr -a -- .c 'chezmoi cd'
abbr -a -- .C 'chezmoi chattr'
abbr -a -- .i 'chezmoi init'
abbr -a -- .ia 'chezmoi init --apply'
abbr -a -- .Ad 'chezmoi add --verbose'
abbr -a -- .At 'chezmoi add --template'
abbr -a -- .r 'chezmoi remove --verbose'
abbr -a -- .rf 'chezmoi remove --force'
abbr -a -- .e 'chezmoi edit --watch'
abbr -a -- .ea 'chezmoi edit --apply'

# brew
abbr -a -- b brew
abbr -a -- bwre brew
abbr -a -- bt 'brew tap'
abbr -a -- but 'brew untap'
abbr -a -- buse 'brew uses --recursive --installed'
abbr -a -- bdep 'brew deps --tree --installed'
abbr -a -- bi 'brew install'
abbr -a -- bic 'brew install --cask'
abbr -a -- bif 'brew install --force'
abbr -a -- bri 'brew reinstall'
abbr -a -- bo 'brew outdated'
abbr -a -- bug 'brew upgrade'
abbr -a -- bl 'brew link'
abbr -a -- bul 'brew unlink'
abbr -a -- chtsh 'cht.sh --shell'

# node.js
## npm
abbr -a -- nl 'npm list'
abbr -a -- ni 'npm install'
abbr -a -- nid 'npm install -D'
abbr -a -- nig 'npm install -d'
abbr -a -- nu 'npm update'
abbr -a -- nt 'npm run test'
abbr -a -- nb 'npm run build'
abbr -a -- nd 'npm run dev'
abbr -a -- nci 'npm ci'

## pnpm
abbr -a -- p pnpm
abbr -a -- pa 'pnpm add'
abbr -a -- ph 'pnpm help'
abbr -a -- pi 'pnpm install'
abbr -a -- pid 'pnpm install -D'
abbr -a -- pim 'pnpm import'
abbr -a -- pls 'pnpm ls'
abbr -a -- psa 'pnpm store add'
abbr -a -- psp 'pnpm store prune'
abbr -a -- pss 'pnpm store status'
abbr -a -- pst 'pnpm start'
abbr -a -- pt 'pnpm test'
abbr -a -- pb 'pnpm build'
abbr -a -- pr 'pnpm rebuild'
abbr -a -- pd 'pnpm dev'
abbr -a -- pe 'pnpm e2e'
abbr -a -- pu 'pnpm unit'

## deno
abbr -a -- dn deno
abbr -a -- dnh 'deno help | bat'
abbr -a -- dnt 'deno task'
abbr -a -- dnr 'deno run'

abbr -a -- rails 'bundle exec rails'
abbr -a -- rake 'bundle exec rake'
abbr -a -- irb 'bundle exec irb'
abbr -a -- pry 'bundle exec pry'
abbr -a -- rspec 'bundle exec rspec'
abbr -a -- foreman 'bundle exec foreman'
abbr -a -- guard 'bundle exec guard'

{{ if eq .chezmoi.os "darwin" }}
set -gx POCKET_CONSUMER_KEY (security find-generic-password -s "Pocket Consumer Key" -w)
set -gx POCKET_ACCESS_TOKEN (security find-generic-password -s "Pocket Access Token" -w)
set -gx OPENAI_API_KEY (security find-generic-password -s "OpenAI API Key" -w)
set -gx GOOGLE_API_KEY (security find-generic-password -s "Google API Key" -w)
set -gx DEEPL_API_KEY  (security find-generic-password -s "DeepL API Key" -w)
{{ else if eq .chezmoi.os "linux" }}
set -gx OPENAI_API_KEY (secret-tool lookup username $USER key_name "OpenAI API Key")
set -gx GOOGLE_API_KEY (secret-tool lookup username $USER key_name "Google API Key")
set -gx DEEPL_API_KEY  (secret-tool lookup username $USER key_name "DeepL API Key")
{{ end }}
